/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TodosRouteImport } from './routes/todos'
import { Route as Link3RouteImport } from './routes/link3'
import { Route as Link2RouteImport } from './routes/link2'
import { Route as Link1RouteImport } from './routes/link1'
import { Route as AccountRouteImport } from './routes/account'
import { Route as IndexRouteImport } from './routes/index'

const TodosRoute = TodosRouteImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRouteImport,
} as any)
const Link3Route = Link3RouteImport.update({
  id: '/link3',
  path: '/link3',
  getParentRoute: () => rootRouteImport,
} as any)
const Link2Route = Link2RouteImport.update({
  id: '/link2',
  path: '/link2',
  getParentRoute: () => rootRouteImport,
} as any)
const Link1Route = Link1RouteImport.update({
  id: '/link1',
  path: '/link1',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRoute = AccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/link1': typeof Link1Route
  '/link2': typeof Link2Route
  '/link3': typeof Link3Route
  '/todos': typeof TodosRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/link1': typeof Link1Route
  '/link2': typeof Link2Route
  '/link3': typeof Link3Route
  '/todos': typeof TodosRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/link1': typeof Link1Route
  '/link2': typeof Link2Route
  '/link3': typeof Link3Route
  '/todos': typeof TodosRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/account' | '/link1' | '/link2' | '/link3' | '/todos'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/account' | '/link1' | '/link2' | '/link3' | '/todos'
  id: '__root__' | '/' | '/account' | '/link1' | '/link2' | '/link3' | '/todos'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRoute
  Link1Route: typeof Link1Route
  Link2Route: typeof Link2Route
  Link3Route: typeof Link3Route
  TodosRoute: typeof TodosRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/link3': {
      id: '/link3'
      path: '/link3'
      fullPath: '/link3'
      preLoaderRoute: typeof Link3RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/link2': {
      id: '/link2'
      path: '/link2'
      fullPath: '/link2'
      preLoaderRoute: typeof Link2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/link1': {
      id: '/link1'
      path: '/link1'
      fullPath: '/link1'
      preLoaderRoute: typeof Link1RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRoute,
  Link1Route: Link1Route,
  Link2Route: Link2Route,
  Link3Route: Link3Route,
  TodosRoute: TodosRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
